#  ==============================================================================
#  Created by Fehmi Demiralp(Fedem) on 2025-08-03 GMT
#  Copyright (C) 2023-2025 Fedem (Fehmi Demiralp) <f.demiralp@gmail.com>
#
#  This file is generated by UMTSM using the code generator `CppGen`
#
#  Released under the MIT License
#  ==============================================================================
#

#  Copyright (C) 2023-2025 Fedem (Fehmi Demiralp) <f.demiralp@gmail.com>
#
#  Permission is hereby granted, free of charge, to any person obtaining a copy
#  of this software and associated documentation files (the "Software"), to deal
#  in the Software without restriction, including without limitation the rights
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#  copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in all
#  copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#  SOFTWARE.
#

#
# Test the module `Sensor_Open_End`
#

cmake_minimum_required( VERSION 3.20 )

find_program(CCACHE_PROGRAM ccache)
if(CCACHE_PROGRAM)
    set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE "${CCACHE_PROGRAM}")
endif()

set(VERSION 1.0)
project( UMTSM-Sensor_Open_End-Tests VERSION ${VERSION} LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 23)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_BUILD_TYPE Debug)

find_package( Threads )

# includes extra rules if any
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/../../src/sensor_open_end/CMakeExtras.cmake)
  include(${CMAKE_CURRENT_SOURCE_DIR}/../../src/sensor_open_end/CMakeExtras.cmake)
endif()

macro(add_gmock_suit smName suit)
  add_executable(test${suit}${smName})
  target_include_directories(test${suit}${smName} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
  target_include_directories(test${suit}${smName} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/../../src/sensor_open_end)
  target_link_directories(test${suit}${smName} PRIVATE ${CMAKE_CURRENT_BINARY_DIR}/../../src/sensor_open_end)

  target_sources(test${suit}${smName} PRIVATE
       ../../src/sensor_open_end/${suit}${smName}.cpp
       ../../src/sensor_open_end/${suit}${smName}_DataType.cpp
        ${suit}${smName}_Mock.hh
        ${suit}${smName}_Fixture.cpp ${suit}${smName}_Fixture.hh
        ${suit}${smName}_Helper.hh
        ${suit}${smName}_InitTests.cpp
        ${suit}${smName}_StartTests.cpp
  )
  target_include_directories(test${suit}${smName} PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}")
  if(DEFINED LIB${smName}_INCLUDES_EXTRA)
    target_include_directories(test${suit}${smName} PRIVATE "${LIB${smName}_INCLUDES_EXTRA}")
  endif()
  target_link_libraries(test${suit}${smName} PRIVATE ${GTEST_LDFLAGS} gtest gmock
        gmock_main ${CMAKE_THREAD_LIBS_INIT} LIBR${smName}_Shared)
  if(DEFINED TEST${smName}_INCLUDES_EXTRA)
    target_include_directories(test${suit}${smName} PRIVATE "${TEST${smName}_INCLUDES_EXTRA}")
  endif()
  if(DEFINED TEST${smName}_LIB_EXTRA)
    target_link_libraries(test${suit}${smName} PRIVATE "${TEST${smName}_LIB_EXTRA}")
  endif()
  target_compile_options(test${suit}${smName} PRIVATE ${GTEST_CFLAGS})
  add_test( TestSuite${suit}${smName} test${suit}${smName} )
endmacro()

#
# Test State Machine `:Sensor_Open_End`
#
add_gmock_suit( "Sensor_Open_End" "" )

# End CMakeList.txt
